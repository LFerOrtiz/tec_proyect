<launch>
  <!-- Initial Pose of Leader Robot-->
  <arg name="initial_pose_x"  default="10.0"/>
  <arg name="initial_pose_y"  default="-0.2"/>
  <arg name="initial_pose_a"  default="3.14"/>

  <arg name="odom_frame_id"   default="agv1/odom"/>
  <arg name="base_frame_id"   default="agv1/base_link"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="laser_topic"     default="agv1/scan" />

  <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 map /agv1/odom 10"/>

  <!-- AMCL Node config -->
  <node pkg="amcl" type="amcl" name="agv1_amcl" output="screen">
    <!-- indicate that this transform is valid into the future. -->
    <param name="transform_tolerance"   value="0.1" /> <!-- 0.1 -->
    <!-- Number of particles for amcl -->
    <param name="min_particles"         value="50"/>
    <param name="max_particles"         value="800"/>

    <!-- Translational (d), rotational (a) movement required before performing a filter update. -->
    <param name="update_min_d"          value="0.1"/> <!-- 0.2 -->
    <param name="update_min_a"          value="0.13"/> <!-- Ï€/6.0 radians 0.5236 -->

    <!-- Number of filter updates required before resampling. -->
    <param name="resample_interval"     value="2" />

    <!-- Initial pose mean (x, y, a), used to initialize filter with Gaussian distribution. -->
    <param name="initial_pose_x"        value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y"        value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a"        value="$(arg initial_pose_a)"/>

    <!-- Initial covariance (xx, yy, aa), used to initialize filter with Gaussian distribution. -->
    <param name="initial_cov_xx"        value="1.0"/> <!-- 0.0 -->
    <param name="initial_cov_yy"        value="1.0"/> <!-- 0.0 -->
    <param name="initial_cov_aa"        value="1.0"/> <!-- 0.0 -->

    <param name="kld_err"               value="0.05" />
    <param name="kld_z"                 value="0.99"/>

    <param name="gui_publish_rate" value="10.0"/>   <!-- 10.0 -->

    <!-- *********************** Laser parameters *********************** -->
    <param name="laser_model_type"      value="likelihood_field"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="laser_min_range"       value="-1"/>
    <param name="laser_max_range"       value="-1"/>

    <!-- How many evenly-spaced beams in each scan to be used when updating the filter. -->
    <param name="laser_max_beams"       value="30"/>
    <param name="laser_z_hit"           value="0.95"/>
    <param name="laser_z_short"         value="0.1"/>
    <param name="laser_z_max"           value="0.05"/>
    <param name="laser_z_rand"          value="0.05"/>
    <param name="laser_sigma_hit"       value="0.2"/> 
    <param name="laser_lambda_short"    value="0.1"/> 

    <!-- *********************** Odometry parameters *********************** -->
    <param name="tf_broadcast"          value="true" />
    <param name="odom_model_type"       value="diff"/>
    <!-- Frame to use for odometry. -->
    <param name="odom_frame_id"         value="$(arg odom_frame_id)"/>
    <!-- Frame to use for the robot base -->
    <param name="base_frame_id"         value="$(arg base_frame_id)"/>
    <!-- The name of the coordinate frame published by the localization system -->
    <param name="global_frame_id"       value="$(arg global_frame_id)"/>
    <param name="use_map_topic"         value="false"/>

    <!-- Specifies the expected noise in odometry's rotation estimate from the
    rotational component of the robot's motion. -->
    <!-- 1 expected noise in odometry's rotation estimate from the rotational component -->
    <param name="odom_alpha1"           value="0.5"/> <!-- 0.2 -->
    <!-- 2 expected noise in odometry's rotation estimate from the translational component -->
    <param name="odom_alpha2"           value="0.4"/> <!-- 0.2 -->
    <!-- 3 expected noise in odometry's translation estimate from the translational component -->
    <param name="odom_alpha3"           value="0.1"/> <!-- 0.2 -->
    <!-- 4 expected noise in odometry's translation estimate from the rotational component -->
    <param name="odom_alpha4"           value="0.4"/> <!-- 0.2 -->
    <!-- Translation-related noise parameter (only used if model is "omni"). -->
    <param name="odom_alpha5"           value="0.2"/> <!-- 0.2 -->

        <!-- scan topic -->
    <remap from="scan"                  to="$(arg laser_topic)"/>
    <remap from="initialpose"           to="agv1/initialpose"/>
    <remap from="amcl_pose"             to="agv1/amcl_pose"/>
    <remap from="particlecloud"         to="agv1/particlecloud"/>

  </node>

  <!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base_agv1" output="screen">
    <rosparam file="$(find tec_proyect)/config/costmap_common_params.yaml"      command="load" ns="global_costmap" />
    <rosparam file="$(find tec_proyect)/config/costmap_common_params.yaml"      command="load" ns="local_costmap" />
    <rosparam file="$(find tec_proyect)/config/local_costmap_params.yaml"       command="load" />
    <rosparam file="$(find tec_proyect)/config/global_costmap_params.yaml"      command="load" />
    <rosparam file="$(find tec_proyect)/config/base_local_planner_params.yaml"  command="load" />

    <remap from="cmd_vel" to="agv1/cmd_vel"/>
    <remap from="odom"    to="$(arg odom_frame_id)"/>
    <remap from="scan"    to="$(arg laser_topic)"/>

    <!-- A fast, interpolated global planner built as a more flexible replacement to navfn.
    (navfn/NavfnROS, global_planner/GlobalPlanner, carrot_planner/CarrotPlanner) -->
    <param name="base_global_planner" type="string" value="global_planner/GlobalPlanner" />

    <!-- provides an interface for local planners used in navigation -->
    <!-- base_local_planner/TrajectoryPlannerROS, eband_local_planner/EBandPlannerROS, teb_local_planner/TebLocalPlannerROS  -->
    <!-- <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/> -->
    <!--<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" /> -->
    <param name="base_local_planner" value="eband_local_planner/EBandPlannerROS"/>
    <param name="controller_frequency" value="30.0" />
    <param name="planner_frequency" value="10.0" />
  </node>

</launch>