map_type: costmap
obstacle_range: 5.0     # If detect a obstacle closer than the distance specificate, put in the costmap
raytrace_range: 6.5     # Clean and update the free space in the costmap when the robot move

# Point of the geometry of the base_link of the robot
footprint: [ [0.25, 0.25], [0.25, -0.25], [-0.25, -0.25], [-0.25, 0.25] ]

# Maximum latency accepted so the system knows that no link in the transform tree is missing
transform_tolerance: 1.0
robot_radius: 0.27
# Minimal distance between the geometry of the robot and the obstacles
inflation_radius: 0.35

cost_scaling_factor: 5.0 # How far from walls (more is further)
# Sensor used by the navigation stack to get the data and calculate the path
observation_sources: laser_scan_sensor
# Config the sensor's frame
laser_scan_sensor: {sensor_frame: hokuyo, data_type: LaserScan, topic: /agv1/scan, marking: true, clearing: true}
